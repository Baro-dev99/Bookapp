/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bookapp20.gui;

import bookapp20.controllers.BookController;
import bookapp20.controllers.CopyController;
import bookapp20.entities.Book;
import bookapp20.entities.Copy;
import bookapp20.utilities.BookTableModel;
import bookapp20.utilities.CopyTableModel;
import java.sql.SQLException;
import java.util.List;
import java.util.concurrent.ExecutionException;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import org.apache.logging.log4j.Level;
import org.apache.logging.log4j.LogManager;

/**
 *
 * @author hover
 */
public class AddCopyFrame extends javax.swing.JInternalFrame {

    private final BookTableModel bookModel = new BookTableModel();
    private final CopyTableModel copyModel = new CopyTableModel();
    private final String[] statusStrings = {"New", "Used", "Old"};
    private Book currentBook = null;

    public AddCopyFrame() {
        initComponents();
        initActions();
        bookTable.setModel(bookModel);
        copyTable.setModel(copyModel);
    }

    private void initActions() {
        this.setLocation(50, 20);

        bookTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                tableRowSelectedPerformed(e);
            }
        });
    }

    public void reset() {
        bookCodeField.setText(null);
        titleField.setText(null);
        bookModel.removeAll();
        copyCodeField.setText(null);
        copyModel.removeAll();
        currentBook = null;
    }

    private void tableRowSelectedPerformed(ListSelectionEvent e) {
        if (bookModel.getRowCount() > 0) {
            currentBook = bookModel.get(bookTable.getSelectedRow());
            new TableRowSelectedWorker(currentBook).execute();
        }
    }

    private class TableRowSelectedWorker extends SwingWorker<List<Copy>, Void> {

        private Book book;

        public TableRowSelectedWorker(Book book) {
            this.book = book;
        }

        @Override
        protected List<Copy> doInBackground() throws Exception {
            return CopyController.instance.findByBook(book);
        }

        @Override
        public void done() {
            try {
                copyModel.set(get());
                copyCodeField.setText(book.getCode());
//                if (!copyModel.isEmpty()) {
//                    copyTable.setRowSelectionInterval(copyModel.getRowCount() - 1, copyModel.getRowCount() - 1);
//                }
            } catch (InterruptedException | ExecutionException ex) {
                LogManager.getLogger(AddCopyFrame.class).log(Level.FATAL, ex);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        bookCodeField = new javax.swing.JTextField();
        titleField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        searchBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        bookTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        copyTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        copyCodeField = new javax.swing.JTextField();
        statusBox = new JComboBox(statusStrings);
        jLabel4 = new javax.swing.JLabel();
        cancelBtn = new javax.swing.JButton();
        saveBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setTitle("Add New Copy");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Search Book"));

        jLabel1.setText("Code");

        bookCodeField.setColumns(10);

        titleField.setColumns(16);

        jLabel2.setText("Title");

        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        bookTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(bookTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bookCodeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(titleField, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(searchBtn)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bookCodeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(titleField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Current Copies"));

        copyTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        copyTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(copyTable);

        jLabel3.setText("Code");

        copyCodeField.setColumns(10);

        jLabel4.setText("Status");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(copyCodeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(statusBox, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(copyCodeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(statusBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cancelBtn.setText("Cancel");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        saveBtn.setText("Save");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(saveBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelBtn))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancelBtn, saveBtn});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelBtn)
                    .addComponent(saveBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        String bookCode = bookCodeField.getText();
        String title = titleField.getText();
        bookModel.removeAll();
        copyModel.removeAll();
        copyCodeField.setText(null);
        new SearchBookWorker(bookCode, title).execute();
    }//GEN-LAST:event_searchBtnActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        String copyCode = copyCodeField.getText();
        if (copyCode == null || copyCode.isEmpty()) {
            JOptionPane.showMessageDialog(this,
                    "Copy Code field should not be empty",
                    "Entry Error",
                    JOptionPane.ERROR_MESSAGE);
            copyCodeField.requestFocus();
            return;
        }
        if (currentBook == null) {
            JOptionPane.showMessageDialog(this,
                    "Choose a Book first !",
                    "Entry Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        Copy copy = new Copy(copyCode);
        copy.setBook(currentBook);
        copy.setStatus(statusBox.getSelectedItem().toString());
        new SaveWorker(copy).execute();
    }//GEN-LAST:event_saveBtnActionPerformed

    private class SaveWorker extends SwingWorker<String, Void> {

        private Copy copy;

        public SaveWorker(Copy copy) {
            this.copy = copy;
        }

        @Override
        protected String doInBackground() throws Exception {
            try {
                CopyController.instance.create(copy);
                return null;
            } catch (SQLException ex) {
                return ex.getMessage();
            }
        }

        @Override
        public void done() {
            try {
                if (get() == null) {
                    JOptionPane.showMessageDialog(AddCopyFrame.this,
                            copy.toString() + " has been added successfully",
                            "Successful Entry",
                            JOptionPane.INFORMATION_MESSAGE);
                    copyModel.add(copy);
                    //reset();
                } else {
                    JOptionPane.showMessageDialog(AddCopyFrame.this,
                            GuiUtilities.openningHtml + get() + GuiUtilities.closingHtml,
                            "Entry Error",
                            JOptionPane.ERROR_MESSAGE);
                }
            } catch (InterruptedException | ExecutionException ex) {
                java.util.logging.Logger.getLogger(AddPublisherFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
        }

    }

    private class SearchBookWorker extends SwingWorker<List<Book>, Void> {

        private String subCode;
        private String subTitle;

        public SearchBookWorker(String subCode, String subTitle) {
            this.subCode = subCode;
            this.subTitle = subTitle;
        }

        @Override
        protected List<Book> doInBackground() throws Exception {
            return BookController.instance.findByLike(subCode, subTitle);
        }

        @Override
        public void done() {
            try {
                bookModel.set(get());
            } catch (InterruptedException | ExecutionException ex) {
                java.util.logging.Logger.getLogger(AddCopyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField bookCodeField;
    private javax.swing.JTable bookTable;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JTextField copyCodeField;
    private javax.swing.JTable copyTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton saveBtn;
    private javax.swing.JButton searchBtn;
    private javax.swing.JComboBox<String> statusBox;
    private javax.swing.JTextField titleField;
    // End of variables declaration//GEN-END:variables
}
